package org.kok202.deepblock.canvas.block;

import javafx.geometry.Point3D;
import javafx.scene.Group;
import javafx.scene.paint.Color;
import lombok.AccessLevel;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.ToString;
import org.kok202.deepblock.ai.entity.Layer;
import org.kok202.deepblock.canvas.polygon.block.BlockHexahedron;
import org.kok202.deepblock.canvas.singleton.CanvasSingleton;

import java.util.ArrayList;
import java.util.List;

@ToString(exclude = {"blockHexahedronList"})
@EqualsAndHashCode(exclude = {"blockHexahedronList"})
// IMPORTANT : Because using hash set.
// Or stack overflow can be generated by bidirectional reference.
public abstract class BlockNode {
    @Getter
    private BlockInfo blockInfo;

    @Getter(AccessLevel.PROTECTED)
    private List<BlockHexahedron> blockHexahedronList;

    public BlockNode(Layer layer) {
        blockInfo = new BlockInfo(layer);
        blockHexahedronList = new ArrayList<>();
        createBlockModel(layer);
    }

    protected void setBlockCover(Color[]... colorsList){
        for(Color[] colors : colorsList)
            blockInfo.getColorsList().add(colors);
        refreshBlockCover();
    }

    public void refreshBlockCover(){
        for(int i = 0; i < blockHexahedronList.size(); i++){
            if(i < getBlockInfo().getColorsList().size())
                blockHexahedronList.get(i).setColors(getBlockInfo().getColorsList().get(i));
            if(i < getBlockInfo().getTextureSourcesList().size())
                blockHexahedronList.get(i).setTextureSources(getBlockInfo().getTextureSourcesList().get(i));
            blockHexahedronList.get(i).refreshBlockCover();
        }
    }

    public void translatePosition(double x, double y, double z){
        Point3D currentPosition = blockInfo.getPosition();
        Point3D targetPosition = currentPosition.add(x,y,z);
        setPosition(targetPosition.getX(), targetPosition.getY(), targetPosition.getZ());
    }

    public void addedToScene(Group sceneRoot, Point3D insertingPoint) {
        setPosition(insertingPoint.getX(), insertingPoint.getY(), 0);
        blockHexahedronList.forEach(blockHexahedron -> blockHexahedron.addedToScene(sceneRoot));
    }

    public final void deleteHexahedrons(){
        Group sceneRoot = CanvasSingleton.getInstance().getMainCanvas().getMainScene().getSceneRoot();
        blockHexahedronList.forEach(blockHexahedron -> {
            blockHexahedron.removedFromScene(sceneRoot);
        });
        blockHexahedronList.clear();
    }

    public abstract void setHeight(double height);

    public abstract void setPosition(double x, double y, double z);

    protected abstract void createBlockModel(Layer layer);

    public abstract boolean isPossibleToAppendFront();

    public abstract boolean isPossibleToAppendBack();
}
